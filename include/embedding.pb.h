// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: embedding.proto
// Protobuf C++ Version: 4.25.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_embedding_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_embedding_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_embedding_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_embedding_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_embedding_2eproto;
namespace protoembedding {
class NodeEmbedding;
struct NodeEmbeddingDefaultTypeInternal;
extern NodeEmbeddingDefaultTypeInternal _NodeEmbedding_default_instance_;
class NodeEmbeddingRequest;
struct NodeEmbeddingRequestDefaultTypeInternal;
extern NodeEmbeddingRequestDefaultTypeInternal _NodeEmbeddingRequest_default_instance_;
class NodeEmbeddingResponse;
struct NodeEmbeddingResponseDefaultTypeInternal;
extern NodeEmbeddingResponseDefaultTypeInternal _NodeEmbeddingResponse_default_instance_;
}  // namespace protoembedding
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace protoembedding {

// ===================================================================


// -------------------------------------------------------------------

class NodeEmbeddingRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protoembedding.NodeEmbeddingRequest) */ {
 public:
  inline NodeEmbeddingRequest() : NodeEmbeddingRequest(nullptr) {}
  ~NodeEmbeddingRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR NodeEmbeddingRequest(::google::protobuf::internal::ConstantInitialized);

  inline NodeEmbeddingRequest(const NodeEmbeddingRequest& from)
      : NodeEmbeddingRequest(nullptr, from) {}
  NodeEmbeddingRequest(NodeEmbeddingRequest&& from) noexcept
    : NodeEmbeddingRequest() {
    *this = ::std::move(from);
  }

  inline NodeEmbeddingRequest& operator=(const NodeEmbeddingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NodeEmbeddingRequest& operator=(NodeEmbeddingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NodeEmbeddingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NodeEmbeddingRequest* internal_default_instance() {
    return reinterpret_cast<const NodeEmbeddingRequest*>(
               &_NodeEmbeddingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(NodeEmbeddingRequest& a, NodeEmbeddingRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(NodeEmbeddingRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NodeEmbeddingRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NodeEmbeddingRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NodeEmbeddingRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NodeEmbeddingRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const NodeEmbeddingRequest& from) {
    NodeEmbeddingRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NodeEmbeddingRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "protoembedding.NodeEmbeddingRequest";
  }
  protected:
  explicit NodeEmbeddingRequest(::google::protobuf::Arena* arena);
  NodeEmbeddingRequest(::google::protobuf::Arena* arena, const NodeEmbeddingRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNodeIdsFieldNumber = 1,
  };
  // repeated uint32 node_ids = 1;
  int node_ids_size() const;
  private:
  int _internal_node_ids_size() const;

  public:
  void clear_node_ids() ;
  ::uint32_t node_ids(int index) const;
  void set_node_ids(int index, ::uint32_t value);
  void add_node_ids(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& node_ids() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_node_ids();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_node_ids() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_node_ids();

  public:
  // @@protoc_insertion_point(class_scope:protoembedding.NodeEmbeddingRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::uint32_t> node_ids_;
    mutable ::google::protobuf::internal::CachedSize _node_ids_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_embedding_2eproto;
};// -------------------------------------------------------------------

class NodeEmbedding final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protoembedding.NodeEmbedding) */ {
 public:
  inline NodeEmbedding() : NodeEmbedding(nullptr) {}
  ~NodeEmbedding() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR NodeEmbedding(::google::protobuf::internal::ConstantInitialized);

  inline NodeEmbedding(const NodeEmbedding& from)
      : NodeEmbedding(nullptr, from) {}
  NodeEmbedding(NodeEmbedding&& from) noexcept
    : NodeEmbedding() {
    *this = ::std::move(from);
  }

  inline NodeEmbedding& operator=(const NodeEmbedding& from) {
    CopyFrom(from);
    return *this;
  }
  inline NodeEmbedding& operator=(NodeEmbedding&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NodeEmbedding& default_instance() {
    return *internal_default_instance();
  }
  static inline const NodeEmbedding* internal_default_instance() {
    return reinterpret_cast<const NodeEmbedding*>(
               &_NodeEmbedding_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(NodeEmbedding& a, NodeEmbedding& b) {
    a.Swap(&b);
  }
  inline void Swap(NodeEmbedding* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NodeEmbedding* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NodeEmbedding* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NodeEmbedding>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NodeEmbedding& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const NodeEmbedding& from) {
    NodeEmbedding::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NodeEmbedding* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "protoembedding.NodeEmbedding";
  }
  protected:
  explicit NodeEmbedding(::google::protobuf::Arena* arena);
  NodeEmbedding(::google::protobuf::Arena* arena, const NodeEmbedding& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValuesFieldNumber = 1,
  };
  // repeated float values = 1;
  int values_size() const;
  private:
  int _internal_values_size() const;

  public:
  void clear_values() ;
  float values(int index) const;
  void set_values(int index, float value);
  void add_values(float value);
  const ::google::protobuf::RepeatedField<float>& values() const;
  ::google::protobuf::RepeatedField<float>* mutable_values();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_values() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_values();

  public:
  // @@protoc_insertion_point(class_scope:protoembedding.NodeEmbedding)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<float> values_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_embedding_2eproto;
};// -------------------------------------------------------------------

class NodeEmbeddingResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protoembedding.NodeEmbeddingResponse) */ {
 public:
  inline NodeEmbeddingResponse() : NodeEmbeddingResponse(nullptr) {}
  ~NodeEmbeddingResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR NodeEmbeddingResponse(::google::protobuf::internal::ConstantInitialized);

  inline NodeEmbeddingResponse(const NodeEmbeddingResponse& from)
      : NodeEmbeddingResponse(nullptr, from) {}
  NodeEmbeddingResponse(NodeEmbeddingResponse&& from) noexcept
    : NodeEmbeddingResponse() {
    *this = ::std::move(from);
  }

  inline NodeEmbeddingResponse& operator=(const NodeEmbeddingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline NodeEmbeddingResponse& operator=(NodeEmbeddingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NodeEmbeddingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const NodeEmbeddingResponse* internal_default_instance() {
    return reinterpret_cast<const NodeEmbeddingResponse*>(
               &_NodeEmbeddingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(NodeEmbeddingResponse& a, NodeEmbeddingResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(NodeEmbeddingResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NodeEmbeddingResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NodeEmbeddingResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NodeEmbeddingResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NodeEmbeddingResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const NodeEmbeddingResponse& from) {
    NodeEmbeddingResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NodeEmbeddingResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "protoembedding.NodeEmbeddingResponse";
  }
  protected:
  explicit NodeEmbeddingResponse(::google::protobuf::Arena* arena);
  NodeEmbeddingResponse(::google::protobuf::Arena* arena, const NodeEmbeddingResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEmbeddingsFieldNumber = 1,
    kMissingIdsFieldNumber = 2,
  };
  // repeated .protoembedding.NodeEmbedding embeddings = 1;
  int embeddings_size() const;
  private:
  int _internal_embeddings_size() const;

  public:
  void clear_embeddings() ;
  ::protoembedding::NodeEmbedding* mutable_embeddings(int index);
  ::google::protobuf::RepeatedPtrField< ::protoembedding::NodeEmbedding >*
      mutable_embeddings();
  private:
  const ::google::protobuf::RepeatedPtrField<::protoembedding::NodeEmbedding>& _internal_embeddings() const;
  ::google::protobuf::RepeatedPtrField<::protoembedding::NodeEmbedding>* _internal_mutable_embeddings();
  public:
  const ::protoembedding::NodeEmbedding& embeddings(int index) const;
  ::protoembedding::NodeEmbedding* add_embeddings();
  const ::google::protobuf::RepeatedPtrField< ::protoembedding::NodeEmbedding >&
      embeddings() const;
  // repeated uint32 missing_ids = 2;
  int missing_ids_size() const;
  private:
  int _internal_missing_ids_size() const;

  public:
  void clear_missing_ids() ;
  ::uint32_t missing_ids(int index) const;
  void set_missing_ids(int index, ::uint32_t value);
  void add_missing_ids(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& missing_ids() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_missing_ids();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_missing_ids() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_missing_ids();

  public:
  // @@protoc_insertion_point(class_scope:protoembedding.NodeEmbeddingResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::protoembedding::NodeEmbedding > embeddings_;
    ::google::protobuf::RepeatedField<::uint32_t> missing_ids_;
    mutable ::google::protobuf::internal::CachedSize _missing_ids_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_embedding_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// NodeEmbeddingRequest

// repeated uint32 node_ids = 1;
inline int NodeEmbeddingRequest::_internal_node_ids_size() const {
  return _internal_node_ids().size();
}
inline int NodeEmbeddingRequest::node_ids_size() const {
  return _internal_node_ids_size();
}
inline void NodeEmbeddingRequest::clear_node_ids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.node_ids_.Clear();
}
inline ::uint32_t NodeEmbeddingRequest::node_ids(int index) const {
  // @@protoc_insertion_point(field_get:protoembedding.NodeEmbeddingRequest.node_ids)
  return _internal_node_ids().Get(index);
}
inline void NodeEmbeddingRequest::set_node_ids(int index, ::uint32_t value) {
  _internal_mutable_node_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:protoembedding.NodeEmbeddingRequest.node_ids)
}
inline void NodeEmbeddingRequest::add_node_ids(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_node_ids()->Add(value);
  // @@protoc_insertion_point(field_add:protoembedding.NodeEmbeddingRequest.node_ids)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& NodeEmbeddingRequest::node_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protoembedding.NodeEmbeddingRequest.node_ids)
  return _internal_node_ids();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* NodeEmbeddingRequest::mutable_node_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protoembedding.NodeEmbeddingRequest.node_ids)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_node_ids();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& NodeEmbeddingRequest::_internal_node_ids()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.node_ids_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* NodeEmbeddingRequest::_internal_mutable_node_ids() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.node_ids_;
}

// -------------------------------------------------------------------

// NodeEmbedding

// repeated float values = 1;
inline int NodeEmbedding::_internal_values_size() const {
  return _internal_values().size();
}
inline int NodeEmbedding::values_size() const {
  return _internal_values_size();
}
inline void NodeEmbedding::clear_values() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.values_.Clear();
}
inline float NodeEmbedding::values(int index) const {
  // @@protoc_insertion_point(field_get:protoembedding.NodeEmbedding.values)
  return _internal_values().Get(index);
}
inline void NodeEmbedding::set_values(int index, float value) {
  _internal_mutable_values()->Set(index, value);
  // @@protoc_insertion_point(field_set:protoembedding.NodeEmbedding.values)
}
inline void NodeEmbedding::add_values(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_values()->Add(value);
  // @@protoc_insertion_point(field_add:protoembedding.NodeEmbedding.values)
}
inline const ::google::protobuf::RepeatedField<float>& NodeEmbedding::values() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protoembedding.NodeEmbedding.values)
  return _internal_values();
}
inline ::google::protobuf::RepeatedField<float>* NodeEmbedding::mutable_values()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protoembedding.NodeEmbedding.values)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_values();
}
inline const ::google::protobuf::RepeatedField<float>& NodeEmbedding::_internal_values()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.values_;
}
inline ::google::protobuf::RepeatedField<float>* NodeEmbedding::_internal_mutable_values() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.values_;
}

// -------------------------------------------------------------------

// NodeEmbeddingResponse

// repeated .protoembedding.NodeEmbedding embeddings = 1;
inline int NodeEmbeddingResponse::_internal_embeddings_size() const {
  return _internal_embeddings().size();
}
inline int NodeEmbeddingResponse::embeddings_size() const {
  return _internal_embeddings_size();
}
inline void NodeEmbeddingResponse::clear_embeddings() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.embeddings_.Clear();
}
inline ::protoembedding::NodeEmbedding* NodeEmbeddingResponse::mutable_embeddings(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protoembedding.NodeEmbeddingResponse.embeddings)
  return _internal_mutable_embeddings()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::protoembedding::NodeEmbedding>* NodeEmbeddingResponse::mutable_embeddings()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protoembedding.NodeEmbeddingResponse.embeddings)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_embeddings();
}
inline const ::protoembedding::NodeEmbedding& NodeEmbeddingResponse::embeddings(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protoembedding.NodeEmbeddingResponse.embeddings)
  return _internal_embeddings().Get(index);
}
inline ::protoembedding::NodeEmbedding* NodeEmbeddingResponse::add_embeddings() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::protoembedding::NodeEmbedding* _add = _internal_mutable_embeddings()->Add();
  // @@protoc_insertion_point(field_add:protoembedding.NodeEmbeddingResponse.embeddings)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::protoembedding::NodeEmbedding>& NodeEmbeddingResponse::embeddings() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protoembedding.NodeEmbeddingResponse.embeddings)
  return _internal_embeddings();
}
inline const ::google::protobuf::RepeatedPtrField<::protoembedding::NodeEmbedding>&
NodeEmbeddingResponse::_internal_embeddings() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.embeddings_;
}
inline ::google::protobuf::RepeatedPtrField<::protoembedding::NodeEmbedding>*
NodeEmbeddingResponse::_internal_mutable_embeddings() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.embeddings_;
}

// repeated uint32 missing_ids = 2;
inline int NodeEmbeddingResponse::_internal_missing_ids_size() const {
  return _internal_missing_ids().size();
}
inline int NodeEmbeddingResponse::missing_ids_size() const {
  return _internal_missing_ids_size();
}
inline void NodeEmbeddingResponse::clear_missing_ids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.missing_ids_.Clear();
}
inline ::uint32_t NodeEmbeddingResponse::missing_ids(int index) const {
  // @@protoc_insertion_point(field_get:protoembedding.NodeEmbeddingResponse.missing_ids)
  return _internal_missing_ids().Get(index);
}
inline void NodeEmbeddingResponse::set_missing_ids(int index, ::uint32_t value) {
  _internal_mutable_missing_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:protoembedding.NodeEmbeddingResponse.missing_ids)
}
inline void NodeEmbeddingResponse::add_missing_ids(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_missing_ids()->Add(value);
  // @@protoc_insertion_point(field_add:protoembedding.NodeEmbeddingResponse.missing_ids)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& NodeEmbeddingResponse::missing_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protoembedding.NodeEmbeddingResponse.missing_ids)
  return _internal_missing_ids();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* NodeEmbeddingResponse::mutable_missing_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protoembedding.NodeEmbeddingResponse.missing_ids)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_missing_ids();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& NodeEmbeddingResponse::_internal_missing_ids()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.missing_ids_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* NodeEmbeddingResponse::_internal_mutable_missing_ids() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.missing_ids_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protoembedding


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_embedding_2eproto_2epb_2eh
