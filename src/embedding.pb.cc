// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: embedding.proto

#include "embedding.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace protoembedding {

inline constexpr NodeEmbeddingRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : node_ids_{},
        _node_ids_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NodeEmbeddingRequest::NodeEmbeddingRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodeEmbeddingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeEmbeddingRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeEmbeddingRequestDefaultTypeInternal() {}
  union {
    NodeEmbeddingRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeEmbeddingRequestDefaultTypeInternal _NodeEmbeddingRequest_default_instance_;

inline constexpr NodeEmbedding::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : values_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NodeEmbedding::NodeEmbedding(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodeEmbeddingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeEmbeddingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeEmbeddingDefaultTypeInternal() {}
  union {
    NodeEmbedding _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeEmbeddingDefaultTypeInternal _NodeEmbedding_default_instance_;

inline constexpr NodeEmbeddingResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : embeddings_{},
        missing_ids_{},
        _missing_ids_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NodeEmbeddingResponse::NodeEmbeddingResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodeEmbeddingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeEmbeddingResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeEmbeddingResponseDefaultTypeInternal() {}
  union {
    NodeEmbeddingResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeEmbeddingResponseDefaultTypeInternal _NodeEmbeddingResponse_default_instance_;
}  // namespace protoembedding
static ::_pb::Metadata file_level_metadata_embedding_2eproto[3];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_embedding_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_embedding_2eproto = nullptr;
const ::uint32_t TableStruct_embedding_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protoembedding::NodeEmbeddingRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protoembedding::NodeEmbeddingRequest, _impl_.node_ids_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protoembedding::NodeEmbedding, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protoembedding::NodeEmbedding, _impl_.values_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protoembedding::NodeEmbeddingResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protoembedding::NodeEmbeddingResponse, _impl_.embeddings_),
    PROTOBUF_FIELD_OFFSET(::protoembedding::NodeEmbeddingResponse, _impl_.missing_ids_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::protoembedding::NodeEmbeddingRequest)},
        {9, -1, -1, sizeof(::protoembedding::NodeEmbedding)},
        {18, -1, -1, sizeof(::protoembedding::NodeEmbeddingResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::protoembedding::_NodeEmbeddingRequest_default_instance_._instance,
    &::protoembedding::_NodeEmbedding_default_instance_._instance,
    &::protoembedding::_NodeEmbeddingResponse_default_instance_._instance,
};
const char descriptor_table_protodef_embedding_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\017embedding.proto\022\016protoembedding\"(\n\024Nod"
    "eEmbeddingRequest\022\020\n\010node_ids\030\001 \003(\r\"\037\n\rN"
    "odeEmbedding\022\016\n\006values\030\001 \003(\002\"_\n\025NodeEmbe"
    "ddingResponse\0221\n\nembeddings\030\001 \003(\0132\035.prot"
    "oembedding.NodeEmbedding\022\023\n\013missing_ids\030"
    "\002 \003(\rb\006proto3"
};
static ::absl::once_flag descriptor_table_embedding_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_embedding_2eproto = {
    false,
    false,
    213,
    descriptor_table_protodef_embedding_2eproto,
    "embedding.proto",
    &descriptor_table_embedding_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_embedding_2eproto::offsets,
    file_level_metadata_embedding_2eproto,
    file_level_enum_descriptors_embedding_2eproto,
    file_level_service_descriptors_embedding_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_embedding_2eproto_getter() {
  return &descriptor_table_embedding_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_embedding_2eproto(&descriptor_table_embedding_2eproto);
namespace protoembedding {
// ===================================================================

class NodeEmbeddingRequest::_Internal {
 public:
};

NodeEmbeddingRequest::NodeEmbeddingRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protoembedding.NodeEmbeddingRequest)
}
inline PROTOBUF_NDEBUG_INLINE NodeEmbeddingRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : node_ids_{visibility, arena, from.node_ids_},
        _node_ids_cached_byte_size_{0},
        _cached_size_{0} {}

NodeEmbeddingRequest::NodeEmbeddingRequest(
    ::google::protobuf::Arena* arena,
    const NodeEmbeddingRequest& from)
    : ::google::protobuf::Message(arena) {
  NodeEmbeddingRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:protoembedding.NodeEmbeddingRequest)
}
inline PROTOBUF_NDEBUG_INLINE NodeEmbeddingRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : node_ids_{visibility, arena},
        _node_ids_cached_byte_size_{0},
        _cached_size_{0} {}

inline void NodeEmbeddingRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NodeEmbeddingRequest::~NodeEmbeddingRequest() {
  // @@protoc_insertion_point(destructor:protoembedding.NodeEmbeddingRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NodeEmbeddingRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NodeEmbeddingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protoembedding.NodeEmbeddingRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_ids_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NodeEmbeddingRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> NodeEmbeddingRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NodeEmbeddingRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated uint32 node_ids = 1;
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NodeEmbeddingRequest, _impl_.node_ids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated uint32 node_ids = 1;
    {PROTOBUF_FIELD_OFFSET(NodeEmbeddingRequest, _impl_.node_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* NodeEmbeddingRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protoembedding.NodeEmbeddingRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated uint32 node_ids = 1;
  {
    int byte_size = _impl_._node_ids_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_node_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protoembedding.NodeEmbeddingRequest)
  return target;
}

::size_t NodeEmbeddingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protoembedding.NodeEmbeddingRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 node_ids = 1;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_node_ids())
    ;
    _impl_._node_ids_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NodeEmbeddingRequest::_class_data_ = {
    NodeEmbeddingRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NodeEmbeddingRequest::GetClassData() const {
  return &_class_data_;
}

void NodeEmbeddingRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NodeEmbeddingRequest*>(&to_msg);
  auto& from = static_cast<const NodeEmbeddingRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protoembedding.NodeEmbeddingRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_node_ids()->MergeFrom(from._internal_node_ids());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeEmbeddingRequest::CopyFrom(const NodeEmbeddingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protoembedding.NodeEmbeddingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NodeEmbeddingRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NodeEmbeddingRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NodeEmbeddingRequest::InternalSwap(NodeEmbeddingRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.node_ids_.InternalSwap(&other->_impl_.node_ids_);
}

::google::protobuf::Metadata NodeEmbeddingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_embedding_2eproto_getter, &descriptor_table_embedding_2eproto_once,
      file_level_metadata_embedding_2eproto[0]);
}
// ===================================================================

class NodeEmbedding::_Internal {
 public:
};

NodeEmbedding::NodeEmbedding(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protoembedding.NodeEmbedding)
}
inline PROTOBUF_NDEBUG_INLINE NodeEmbedding::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : values_{visibility, arena, from.values_},
        _cached_size_{0} {}

NodeEmbedding::NodeEmbedding(
    ::google::protobuf::Arena* arena,
    const NodeEmbedding& from)
    : ::google::protobuf::Message(arena) {
  NodeEmbedding* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:protoembedding.NodeEmbedding)
}
inline PROTOBUF_NDEBUG_INLINE NodeEmbedding::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : values_{visibility, arena},
        _cached_size_{0} {}

inline void NodeEmbedding::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NodeEmbedding::~NodeEmbedding() {
  // @@protoc_insertion_point(destructor:protoembedding.NodeEmbedding)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NodeEmbedding::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NodeEmbedding::Clear() {
// @@protoc_insertion_point(message_clear_start:protoembedding.NodeEmbedding)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NodeEmbedding::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> NodeEmbedding::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NodeEmbedding_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated float values = 1;
    {::_pbi::TcParser::FastF32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NodeEmbedding, _impl_.values_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated float values = 1;
    {PROTOBUF_FIELD_OFFSET(NodeEmbedding, _impl_.values_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* NodeEmbedding::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protoembedding.NodeEmbedding)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated float values = 1;
  if (this->_internal_values_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_values(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protoembedding.NodeEmbedding)
  return target;
}

::size_t NodeEmbedding::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protoembedding.NodeEmbedding)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float values = 1;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_values_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NodeEmbedding::_class_data_ = {
    NodeEmbedding::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NodeEmbedding::GetClassData() const {
  return &_class_data_;
}

void NodeEmbedding::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NodeEmbedding*>(&to_msg);
  auto& from = static_cast<const NodeEmbedding&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protoembedding.NodeEmbedding)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_values()->MergeFrom(from._internal_values());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeEmbedding::CopyFrom(const NodeEmbedding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protoembedding.NodeEmbedding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NodeEmbedding::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NodeEmbedding::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NodeEmbedding::InternalSwap(NodeEmbedding* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
}

::google::protobuf::Metadata NodeEmbedding::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_embedding_2eproto_getter, &descriptor_table_embedding_2eproto_once,
      file_level_metadata_embedding_2eproto[1]);
}
// ===================================================================

class NodeEmbeddingResponse::_Internal {
 public:
};

NodeEmbeddingResponse::NodeEmbeddingResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protoembedding.NodeEmbeddingResponse)
}
inline PROTOBUF_NDEBUG_INLINE NodeEmbeddingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : embeddings_{visibility, arena, from.embeddings_},
        missing_ids_{visibility, arena, from.missing_ids_},
        _missing_ids_cached_byte_size_{0},
        _cached_size_{0} {}

NodeEmbeddingResponse::NodeEmbeddingResponse(
    ::google::protobuf::Arena* arena,
    const NodeEmbeddingResponse& from)
    : ::google::protobuf::Message(arena) {
  NodeEmbeddingResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:protoembedding.NodeEmbeddingResponse)
}
inline PROTOBUF_NDEBUG_INLINE NodeEmbeddingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : embeddings_{visibility, arena},
        missing_ids_{visibility, arena},
        _missing_ids_cached_byte_size_{0},
        _cached_size_{0} {}

inline void NodeEmbeddingResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NodeEmbeddingResponse::~NodeEmbeddingResponse() {
  // @@protoc_insertion_point(destructor:protoembedding.NodeEmbeddingResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NodeEmbeddingResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NodeEmbeddingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:protoembedding.NodeEmbeddingResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.embeddings_.Clear();
  _impl_.missing_ids_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NodeEmbeddingResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> NodeEmbeddingResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NodeEmbeddingResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated uint32 missing_ids = 2;
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NodeEmbeddingResponse, _impl_.missing_ids_)}},
    // repeated .protoembedding.NodeEmbedding embeddings = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NodeEmbeddingResponse, _impl_.embeddings_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .protoembedding.NodeEmbedding embeddings = 1;
    {PROTOBUF_FIELD_OFFSET(NodeEmbeddingResponse, _impl_.embeddings_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated uint32 missing_ids = 2;
    {PROTOBUF_FIELD_OFFSET(NodeEmbeddingResponse, _impl_.missing_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protoembedding::NodeEmbedding>()},
  }}, {{
  }},
};

::uint8_t* NodeEmbeddingResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protoembedding.NodeEmbeddingResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .protoembedding.NodeEmbedding embeddings = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_embeddings_size()); i < n; i++) {
    const auto& repfield = this->_internal_embeddings().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated uint32 missing_ids = 2;
  {
    int byte_size = _impl_._missing_ids_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          2, _internal_missing_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protoembedding.NodeEmbeddingResponse)
  return target;
}

::size_t NodeEmbeddingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protoembedding.NodeEmbeddingResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protoembedding.NodeEmbedding embeddings = 1;
  total_size += 1UL * this->_internal_embeddings_size();
  for (const auto& msg : this->_internal_embeddings()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated uint32 missing_ids = 2;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_missing_ids())
    ;
    _impl_._missing_ids_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NodeEmbeddingResponse::_class_data_ = {
    NodeEmbeddingResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NodeEmbeddingResponse::GetClassData() const {
  return &_class_data_;
}

void NodeEmbeddingResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NodeEmbeddingResponse*>(&to_msg);
  auto& from = static_cast<const NodeEmbeddingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protoembedding.NodeEmbeddingResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_embeddings()->MergeFrom(
      from._internal_embeddings());
  _this->_internal_mutable_missing_ids()->MergeFrom(from._internal_missing_ids());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeEmbeddingResponse::CopyFrom(const NodeEmbeddingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protoembedding.NodeEmbeddingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NodeEmbeddingResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NodeEmbeddingResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NodeEmbeddingResponse::InternalSwap(NodeEmbeddingResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.embeddings_.InternalSwap(&other->_impl_.embeddings_);
  _impl_.missing_ids_.InternalSwap(&other->_impl_.missing_ids_);
}

::google::protobuf::Metadata NodeEmbeddingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_embedding_2eproto_getter, &descriptor_table_embedding_2eproto_once,
      file_level_metadata_embedding_2eproto[2]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace protoembedding
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
